#!/usr/bin/env zsh

# The interfaces that are to be enabled are ones that show up in the list by
# calling `zerotier-cli listnetworks` while simultaneously having a script
# located in the module in the format of <nwid>.conf.
#
# If the service file doesn't exist, it is linked with `systemctl link`.
# If the service file exists, but doesn't point to the correct file, then
# it is asked what the user wants to do (with the same semantics as symlink).
#
# A symlink is created from /etc/systemd/system/zt-network@.service to
# /etc/systemd/system/multi-user.target.wants/zt-network@<dev>.service
#
# Interfaces fall into 3 categories:
# - service doesn't exist (or is not proper) && network exists
# => create the service
# - service exists && network doesn't exist
# => delete the service
# - service exists (and is proper) && network exists
# => do nothing, skip it

function() {
  local networks
  local nwid dev
  local -A interfaces

  local -aU existing_services

  for network ("${(@f)$(zerotier-cli listnetworks | tail -n +2)}"); do
    dev=$(echo $network | cut -d' ' -f8)
    nwid=$(echo $network | cut -d' ' -f3)
    interfaces[$nwid]=$dev
  done

  for service_name ('zt-network@' 'zt-keepalive@'); do
    local service_file=/etc/systemd/system/$service_name.service
    local abs_service_file=$DOTFILES_PATH/zerotier/$service_name.service

    if [[ -f $service_file && "${service_file:A}" != "$abs_service_file" ]]; then
      rm $service_file
      status $? "removed $service_file"
    fi

    if [[ ! -f $service_file ]]; then
      systemctl link "$abs_service_file"
      status $? "linked zt-network@.service to /etc/systemd/system"
    fi

    existing_services=(/etc/systemd/system/multi-user.target.wants/$service_name*.service(N))
    for service ($existing_services); do
      if [[ "${service:A}" != "$abs_service_file" ]]; then
        systemctl stop "${service}"
        unlink "${service}"
        status $? "removed invalid network link at $service"
      fi
    done

    for nwid (${(@k)interfaces}); do
      service="/etc/systemd/system/multi-user.target.wants/$service_name${interfaces[$nwid]}.service"
      if [[ -f "$DOTFILES_PATH/zerotier/${nwid}.conf" ]]; then
        if [[ -f $service ]]; then
          success "skipped ${service:t} for $nwid"
        else
          ln -s "$service_file" "$service"
          status $? "created $service; $nwid"
        fi
      elif [[ -f $service ]]; then
        systemctl stop "$service"
        rm $service
        status $? "removed $service; ${nwid}.conf doesn't exist"
      fi
      existing_services=("${(@)existing_services:#$service}")
    done

    for service ($existing_services); do
      rm $service
      status $? "removed $service; not attached to a valid network"
    done
  done
}
